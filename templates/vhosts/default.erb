<%
vhost_parts = case @ssl_mode
  when 'only' then [:ssl]
  when false,'false' then  [:normal]
  else [:normal,:ssl]
end
vhost_parts.each do |vhost_part| -%>
<VirtualHost *:<%= vhost_part == :ssl ? '443' : '80' %> >

<%= scope.call_function('templatewlv',['apache/vhosts/partials/header_default.erb',
                                {'vhost_part'    => vhost_part,
                                 'configuration' => @configuration,}]) %>

<%= scope.call_function('template',['apache/vhosts/partials/logs.erb']) %>

<% if @run_mode.to_s == 'fcgid' -%>
  <IfModule mod_fcgid.c>
    SuexecUserGroup <%= "#{@run_uid} #{@run_gid}" %>
    FcgidMaxRequestsPerProcess 4990
    FCGIWrapper /var/www/mod_fcgid-starters/<%= @name %>/<%= @name %>-starter .<%= @passing_extension %>
    AddHandler fcgid-script .<%= @passing_extension %>
<% if @configuration.is_a?(Hash) && @configuration['fcgid_options'].is_a?(Hash)
  @configuration['fcgid_options'].keys.sort.each do |option|
-%>
    <%= option %> <%= @configuration['fcgid_options'][option] %>
<% end
  end -%>
  </IfModule>

<% elsif @run_mode.to_s == 'fpm' -%>
  <Proxy "unix:/run/fpm-<%= @name %>-socket/0.socket|fcgi://fpm-<%= @name %>-0">
    ProxySet timeout=<%= @php_settings['max_execution_time'] || 300 %>
  </Proxy>

  # Redirect to the proxy
  <FilesMatch \.php$>
    SetHandler proxy:fcgi://fpm-<%= @name %>-0
  </FilesMatch>

<% end
if @ssl_mode == 'force' && vhost_part == :normal -%>
  RewriteEngine On
  RewriteCond %{HTTPS} !=on
  RewriteCond %{HTTP:X-Forwarded-Proto} !=https
  RewriteRule (.*) https://%{SERVER_NAME}$1 [R=permanent,L]
<% end -%>
<% if @configuration.key?('auth_openidc') -%><%= @rendered_auth_openidc %><% end -%>
<%= scope.call_function('templatewlv',[@template_partial, {'vhost_part' => vhost_part } ]) %>
<% if @template_partial != 'apache/vhosts/container/partial.erb' && @configuration['containers'].is_a?(Hash) && @configuration['containers'].any?{|c,v| v['route'] } -%>

  ProxyPreserveHost On
  ProxyRequests Off
<%= scope.call_function('template',['apache/vhosts/partials/container_proxy_paths_mapping.erb']) %>

<% end -%>
<%= scope.call_function('template',['apache/vhosts/partials/mod_security.erb']) %>
<% unless @additional_options.to_s == 'absent' -%>
  <%= @additional_options %>
<% end -%>
</VirtualHost>
<% end -%>
